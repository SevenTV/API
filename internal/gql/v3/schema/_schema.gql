scalar Time
scalar ObjectID
scalar StringMap
scalar ArbitraryMap

schema {
  query: Query
  subscription: Subscription
  mutation: Mutation
}

directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

directive @internal on FIELD_DEFINITION

# Sorting cursor, binding a specific order to a value
input Sort {
  value: String!
  order: SortOrder!
}

# The order with which sorting should occur, either ASCENDING or DESCENDING
enum SortOrder {
  ASCENDING
  DESCENDING
}

enum ListItemAction {
  ADD
  UPDATE
  REMOVE
}

enum ObjectKind {
  USER
  EMOTE
  EMOTE_SET
  ROLE
  ENTITLEMENT
  BAN
  MESSAGE
  REPORT
}

type ChangeMap {
  id: ObjectID!
  kind: ObjectKind!
  actor: User
  added: [ChangeField!]!
  updated: [ChangeField!]!
  removed: [ChangeField!]!
  pushed: [ChangeField!]!
  pulled: [ChangeField!]!
}

type ChangeField {
  key: String!
  index: Int
  nested: Boolean!
  type: String!
  old_value: String
  value: String
}

extend type Query {
  proxied_endpoint(id: Int!, user_id: ObjectID): String!
}
