// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "TODO",
        "contact": {
            "name": "7TV Developers",
            "url": "https://discord.gg/7tv",
            "email": "dev@7tv.io"
        },
        "license": {
            "name": "Apache 2.0 + Commons Clause",
            "url": "https://github.com/SevenTV/REST/blob/dev/LICENSE.md"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chatterino/version/{platform}/{branch}": {
            "get": {
                "description": "Allows chatterino clients to auto update",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chatterino"
                ],
                "summary": "Auto update for chatterino",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The platform such as win, linux, macos",
                        "name": "platform",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The branch such as stable or beta",
                        "name": "branch",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chatterino.VersionResult"
                        }
                    }
                }
            }
        },
        "/cosmetics": {
            "get": {
                "description": "Get all active cosmetics and the users assigned to them",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cosmetics"
                ],
                "summary": "Get Cosmetics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "one of 'object_id', 'twitch_id' or 'login'",
                        "name": "user_identifier",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CosmeticsMap"
                        }
                    }
                }
            }
        },
        "/emotes/global": {
            "get": {
                "description": "Lists active global emotes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emotes"
                ],
                "summary": "Get Globla Emotes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Emote"
                            }
                        }
                    }
                }
            }
        },
        "/emotes/{emote}": {
            "get": {
                "description": "Find an emote by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emotes"
                ],
                "summary": "Get Emote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Emote ID",
                        "name": "emote",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Emote"
                        }
                    }
                }
            }
        },
        "/users/{user}": {
            "get": {
                "description": "Finds a user by its ID, Username or Twitch ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID, Username or Twitch ID",
                        "name": "user",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/users/{user}/emotes": {
            "get": {
                "description": "List the channel emotes of a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users",
                    "emotes"
                ],
                "summary": "Get Channel Emotes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID, Twitch ID or Twitch Login",
                        "name": "user",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Emote"
                            }
                        }
                    }
                }
            }
        },
        "/webext": {
            "get": {
                "description": "Lists downloadable extensions and apps",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Downloads",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/downloads.DownloadsResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chatterino.VersionResult": {
            "type": "object",
            "properties": {
                "download": {
                    "type": "string"
                },
                "portable_download": {
                    "type": "string"
                },
                "updateexe": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "downloads.DownloadsResult": {
            "type": "object",
            "properties": {
                "platforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloads.Platform"
                    }
                }
            }
        },
        "downloads.Platform": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "new": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                },
                "variants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/downloads.PlatformVariant"
                    }
                },
                "version_tag": {
                    "type": "string"
                }
            }
        },
        "downloads.PlatformVariant": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "model.CosmeticBadge": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "misc": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tooltip": {
                    "type": "string"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.CosmeticPaint": {
            "type": "object",
            "properties": {
                "angle": {
                    "type": "integer"
                },
                "color": {
                    "type": "integer"
                },
                "drop_shadows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CosmeticPaintDropShadow"
                    }
                },
                "function": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repeat": {
                    "type": "boolean"
                },
                "shape": {
                    "type": "string"
                },
                "stops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CosmeticPaintGradientStop"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.CosmeticPaintDropShadow": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "integer"
                },
                "radius": {
                    "type": "number"
                },
                "x_offset": {
                    "type": "number"
                },
                "y_offset": {
                    "type": "number"
                }
            }
        },
        "model.CosmeticPaintGradientStop": {
            "type": "object",
            "properties": {
                "at": {
                    "type": "number"
                },
                "color": {
                    "type": "integer"
                }
            }
        },
        "model.CosmeticsMap": {
            "type": "object",
            "properties": {
                "badges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CosmeticBadge"
                    }
                },
                "paints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CosmeticPaint"
                    }
                },
                "t": {
                    "type": "integer"
                }
            }
        },
        "model.Emote": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/model.User"
                },
                "status": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "visibility": {
                    "type": "integer"
                },
                "visibility_simple": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "width": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "allowed": {
                    "type": "integer"
                },
                "color": {
                    "type": "integer"
                },
                "denied": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "profile_picture_id": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                },
                "twitch_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "api.7tv.app",
	BasePath:         "/v2",
	Schemes:          []string{"https"},
	Title:            "7TV REST API",
	Description:      "This is the former v2 REST API for 7TV (deprecated)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
