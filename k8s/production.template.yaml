apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: app
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      volumes:
        - name: config
          configMap:
            name: api-config
            defaultMode: 420
      containers:
        - name: api
          image: ${IMAGE}
          ports:
            - name: gql
              containerPort: 3000
              protocol: TCP
            - name: rest
              containerPort: 3100
              protocol: TCP
            - name: portal
              containerPort: 3200
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
            - name: health
              containerPort: 9200
              protocol: TCP
            - name: pprof
              containerPort: 9300
              protocol: TCP
          envFrom:
            - secretRef:
                name: api-secret
          env:
            - name: API_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            limits:
              cpu: 1000m
              memory: 1536Mi
            requests:
              cpu: 500m
              memory: 1024Mi
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              subPath: config.yaml
          livenessProbe:
            tcpSocket:
              port: health
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: app
  labels:
    app: api
spec:
  ports:
    - name: gql
      protocol: TCP
      port: 3000
      targetPort: gql
    - name: rest
      protocol: TCP
      port: 3100
      targetPort: rest
    - name: portal
      protocol: TCP
      port: 3200
      targetPort: portal
    - name: metrics
      protocol: TCP
      port: 9100
      targetPort: metrics
    - name: health
      protocol: TCP
      port: 9200
      targetPort: health
    - name: pprof
      protocol: TCP
      port: 9300
      targetPort: pprof
  selector:
    app: api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: app
data:
  config.yaml: |
    level: info

    website_url: https://7tv.app
    website_old_url: https://old.7tv.app
    cdn_url: cdn.7tv.app

    http:
      addr: 0.0.0.0
      ports:
        gql: 3000
        rest: 3100

      cookie:
        domain: 7tv.io
        secure: true

    health:
      enabled: true
      bind: 0.0.0.0:9200

    monitoring:
      enabled: true
      bind: 0.0.0.0:9100

    pprof:
      enabled: false
      bind: 0.0.0.0:9300

    limits:
      buckets:
        gql_v3: [250, 2]
        gql_v2: [250, 3]
        image_processing: [4, 60]
      emotes:
        max_processing_time_seconds: 120
        max_width: 1000
        max_height: 1000
        max_frame_count: 1000
        max_tags: 6
        reserved_tags:
          - halloween2022
      quota:
        default_limit: 1000
        max_bad_queries: 5
        max_active_mod_requests: 10

    message_queue:
      rmq:
        max_reconnect_attempts: 10
      sqs:
        max_retry_attempts: 10

    platforms:
      twitch:
        enabled: true

      discord:
        enabled: true
        api: http://compactdisc:3000

    misc:
      beta_paint_entitlement_id: 63bdff9723e3c08ccb76494c

    chatterino:
      version: 7.4.0
      stable:
        win:
          download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.Installer.exe
          portable_download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.Portable.zip
          update_exe: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.Installer.exe
        linux:
          download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7-x86_64.AppImage
        macos:
          download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.dmg
          update_exe: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.dmg
      beta:
        win:
          download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.Installer.exe
          portable_download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.Portable.zip
          update_exe: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.Installer.exe
        linux:
          download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7-x86_64.AppImage
        macos:
          download: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.dmg
          update_exe: https://github.com/SevenTV/chatterino7/releases/download/v7.4.0/Chatterino7.dmg
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  namespace: app
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 7m
    external-dns.alpha.kubernetes.io/hostname: 7tv.io
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  rules:
    - host: 7tv.io
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: api
                port:
                  name: portal
          - pathType: Prefix
            path: /v3/gql
            backend:
              service:
                name: api
                port:
                  name: gql
          - pathType: Prefix
            path: /v3
            backend:
              service:
                name: api
                port:
                  name: rest
          - pathType: Prefix
            path: /v2/gql
            backend:
              service:
                name: api
                port:
                  name: gql
          - pathType: Prefix
            path: /v2
            backend:
              service:
                name: api
                port:
                  name: rest
  tls:
    - hosts:
        - 7tv.io
      secretName: 7tv-io-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-old
  namespace: app
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 7m
    external-dns.alpha.kubernetes.io/hostname: api.7tv.app
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  rules:
    - host: api.7tv.app
      http:
        paths:
          - pathType: Prefix
            path: /v3/gql
            backend:
              service:
                name: api
                port:
                  name: gql
          - pathType: Prefix
            path: /v3
            backend:
              service:
                name: api
                port:
                  name: rest
          - pathType: Prefix
            path: /v2/gql
            backend:
              service:
                name: api
                port:
                  name: gql
          - pathType: Prefix
            path: /v2
            backend:
              service:
                name: api
                port:
                  name: rest
  tls:
    - hosts:
        - api.7tv.app
      secretName: 7tv-app-tls
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: api
  namespace: monitoring
  labels:
    app: api
    release: prometheus
spec:
  jobLabel: api
  selector:
    matchLabels:
      app: api
  namespaceSelector:
    matchNames:
      - app
  endpoints:
    - port: metrics
