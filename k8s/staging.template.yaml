apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: app
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      volumes:
        - name: config
          configMap:
            name: api-config
            defaultMode: 420
      containers:
        - name: api
          image: ${IMAGE}
          ports:
            - name: gql
              containerPort: 3000
              protocol: TCP
            - name: rest
              containerPort: 3100
              protocol: TCP
            - name: metrics
              containerPort: 9100
              protocol: TCP
            - name: health
              containerPort: 9200
              protocol: TCP
          envFrom:
            - secretRef:
                name: api-secret
          env:
            - name: API_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: API_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            limits:
              cpu: "4"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /app/config.yaml
              subPath: config.yaml
          livenessProbe:
            tcpSocket:
              port: health
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: health
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: app
  labels:
    app: api
spec:
  ports:
    - name: gql
      protocol: TCP
      port: 3000
      targetPort: gql
    - name: rest
      protocol: TCP
      port: 3100
      targetPort: rest
    - name: metrics
      protocol: TCP
      port: 9100
      targetPort: metrics
    - name: health
      protocol: TCP
      port: 9200
      targetPort: health
  selector:
    app: api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: app
data:
  config.yaml: |
    level: info

    website_url: https://next.7tv.dev/
    website_old_url: https://7tv.dev/
    cdn_url: cdn.7tv.dev

    http:
      addr: 0.0.0.0
      ports:
        gql: 3000
        rest: 3100

      cookie:
        domain: 7tv.io
        secure: true

    health:
      enabled: true
      bind: 0.0.0.0:9200

    metrics:
      enabled: true
      bind: 0.0.0.0:9100

    limits:
      emotes:
        max_processing_time_seconds: 120
        max_width: 1000
        max_height: 1000
        max_frame_count: 750
        max_tags: 6
      quota:
        default_limit: 1000
        max_bad_queries: 5

    message_queue:
      mode: SQS

      sqs:
        max_retry_attempts: 5

    s3:
      internal_bucket: 7tv-stage-cdn
      public_bucket: 7tv-stage-cdn

    platforms:
      twitch:
        enabled: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  namespace: app
  annotations:
    kubernetes.io/ingress.class: nginx
    external-dns.alpha.kubernetes.io/hostname: stage.7tv.io
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  rules:
    - host: stage.7tv.io
      http:
        paths:
          - pathType: Prefix
            path: /v3/gql
            backend:
              service:
                name: api
                port: 
                  name: gql
          - pathType: Prefix
            path: /v3
            backend:
              service:
                name: api
                port: 
                  name: rest
          - pathType: Prefix
            path: /v2/gql
            backend:
              service:
                name: api
                port: 
                  name: gql
          - pathType: Prefix
            path: /v2
            backend:
              service:
                name: api
                port: 
                  number: rest
  tls:
    - hosts:
        - stage.7tv.io
      secretName: 7tv-io-tls
